;
;  Copyright 2011 by Texas Instruments Incorporated.
;  @(#) DSP/BIOS_Kernel 5,2,5,34 01-20-2011 (cuda-u34)
;
;
;  ======== que.h55 ========
;
;

        .if ($isdefed("QUE_") = 0)  ; prevent multiple includes of this file
QUE_    .set    1

        .include std.h55
        .include cinit.h55


    .if  (_55Pb_)
 .asg   8,      QUE_ELEMSIZE
    .elseif  (_55L_) | (_55H_)  
 .asg   4,      QUE_ELEMSIZE
    .else
 .asg   2,      QUE_ELEMSIZE
  .endif

isQueAligned .set  isDataPtrAligned

QUE_Obj       .struct
next    DataPtr  1
prev    DataPtr  1
endPad .align isQueAligned      
QUE_A_OBJSIZE  .endstruct

;
;# ======== C55_cinitQue ========
; Create the value section for que  records
;
;  Parameters
;  name:                The value for next and previous  pointers
;#
; 
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
;

QUE_cinitObj  .macro  nextValue, prevValue
        .if ($symlen(":prevValue:") = 0)        ; if no  prevValue
                .asg  ":nextValue:", prevValue  ; make prev and
                                                ; next same
        .endif
         C55_cinitBegin         isQueAligned
         C55_cinitDataPtr       :nextValue:
         C55_cinitDataPtr       :prevValue:
         C55_cinitEnd           isQueAligned
        .endm


;
;# ======== QUE_Obj ========
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
;

        .asg    "", QUE_Obj$regs
QUE_Obj .macro cflag, name, id

        .global :name:
        C55_allocateObject   isQueAligned, :name:, QUE_A_OBJSIZE , ".que"
        C55_cinitHeader  1, isQueAligned, :name:, QUE_A_OBJSIZE, 0
        QUE_cinitObj  :name:
        .endm

;
;# ======== QUE_config ========
;  Static configuration of the QUE module
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
;
        .asg    "", QUE_config$regs
QUE_config      .macro
        .endm

;
;# ======== QUE_end ========
;  Invoked at the end of all other configuration
;  declarations.
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
;
        .asg    "", QUE_end$regs
QUE_end .macro
        .endm

;
;# ======== QUE_init ========
;  Runtime initialization of the QUE module
;
;#
;# Preconditions: 
;#      none
;#
;# Postconditions:
;#      none
;#
;
        .asg    "", QUE_init$regs
QUE_init        .macro
        .endm

;
;# ======== QUE_startup ========
;
;#
;# Preconditions:
;#      none
;#
;# Postconditions:
;#      none
;#
        .asg    "", QUE_startup$regs
QUE_startup        .macro
        .endm

        .endif          ; if QUE_ is not defined
